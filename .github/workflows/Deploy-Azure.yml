name: Deploy to Azure

on:
    push:
        branches:
            - '*'

permissions:
    id-token: write
    contents: read

env:
    RESOURCE_GROUP: RG-CALL_FOR_CODE-MARCH
    LOCATION: francecentral
    CONTAINER_GROUP: callforcode-${{ github.ref_name }}
    IMAGE_NAME: ${{ secrets.AZURE_ACR_SERVER }}/myapp:${{ github.sha }}
    ACI_DNS_LABEL: callforcode-${{ github.ref_name}}

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Login to Azure with SP
              uses: azure/login@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: Login to Azure Container Registry (ACR)
              run: |
                echo "${{ secrets.AZURE_ACR_PASSWORD }}" | docker login ${{ secrets.AZURE_ACR_SERVER }} -u ${{ secrets.AZURE_ACR_USERNAME }} --password-stdin
          

            - name: Build and push Docker image
              run: |
                echo "Building API service from API/docker-compose.yml"
                cd API
                pwd
                docker-compose build
                services=("contribute" "data" "generator" "maps" "traitement" "nginx")
                for service in "${services[@]}"
                do
                    echo "Building $service"
                    IMAGE_NAME="${{ secrets.AZURE_ACR_SERVER }}/$service:${{ github.sha }}"
                    docker tag api_${service} $IMAGE_NAME
                    docker push $IMAGE_NAME
                done

            - name: Delete existing container (if exists)
              run: |
                az container delete --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CONTAINER_GROUP }} --yes || true
              

            - name: Deploy to Azure Container Instances (ACI)
              run: |
                az container create --resource-group ${{ env.RESOURCE_GROUP }} --file API/aci.yml

            - name: Verify deployment
              run: |
                STATUS=$(az container show --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CONTAINER_GROUP }} --query "instanceView.state" -o tsv)
                if [[ "$STATUS" != "Running" ]]; then
                    echo "Deployment failed! Check Azure logs."
                    exit 1
                fi
                az container list --resource-group RG-CALL_FOR_CODE-MARCH --query "[].{Name:name, Status:instanceView.state}" --output table
